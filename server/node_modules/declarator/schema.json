{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "AbstractKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.AbstractKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "AmdDependency": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ArrayBindingPattern": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "elements": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/BindingElement"
                            },
                            {
                                "$ref": "#/definitions/OmittedExpression"
                            }
                        ]
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ArrayBindingPattern"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ParameterDeclaration"
                        },
                        {
                            "$ref": "#/definitions/VariableDeclaration"
                        },
                        {
                            "$ref": "#/definitions/BindingElement"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ArrayLiteralExpression": {
            "properties": {
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "elements": {
                    "items": {
                        "$ref": "#/definitions/Expression"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ArrayLiteralExpression"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ArrowFunction": {
            "properties": {
                "_declarationBrand": {
                },
                "_expressionBrand": {
                },
                "_functionLikeDeclarationBrand": {
                },
                "asteriskToken": {
                    "$ref": "#/definitions/AsteriskToken"
                },
                "body": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Expression"
                        },
                        {
                            "$ref": "#/definitions/Block"
                        }
                    ]
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "equalsGreaterThanToken": {
                    "$ref": "#/definitions/EqualsGreaterThanToken"
                },
                "exclamationToken": {
                    "$ref": "#/definitions/ExclamationToken"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ArrowFunction"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AsteriskToken": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.AsteriskToken"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "AsyncKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.AsyncKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "AwaitKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.AwaitKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "BindingElement": {
            "properties": {
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "dotDotDotToken": {
                    "$ref": "#/definitions/DotDotDotToken"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "initializer": {
                    "$ref": "#/definitions/Expression"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.BindingElement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/BindingName"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ObjectBindingPattern"
                        },
                        {
                            "$ref": "#/definitions/ArrayBindingPattern"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "propertyName": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "BindingName": {
            "anyOf": [
                {
                    "$ref": "#/definitions/Identifier"
                },
                {
                    "$ref": "#/definitions/ObjectBindingPattern"
                },
                {
                    "$ref": "#/definitions/ArrayBindingPattern"
                }
            ]
        },
        "Block": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.Block"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "statements": {
                    "items": {
                        "$ref": "#/definitions/Statement"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BreakStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.BreakStatement"
                },
                "label": {
                    "$ref": "#/definitions/Identifier"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "CallSignatureDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_typeElementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.CallSignature"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CaseBlock": {
            "properties": {
                "clauses": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/CaseClause"
                            },
                            {
                                "$ref": "#/definitions/DefaultClause"
                            }
                        ]
                    },
                    "type": "array"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.CaseBlock"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/SwitchStatement"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "CaseClause": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.CaseClause"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/CaseBlock"
                },
                "pos": {
                    "type": "number"
                },
                "statements": {
                    "items": {
                        "$ref": "#/definitions/Statement"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CatchClause": {
            "properties": {
                "block": {
                    "$ref": "#/definitions/Block"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.CatchClause"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/TryStatement"
                },
                "pos": {
                    "type": "number"
                },
                "variableDeclaration": {
                    "$ref": "#/definitions/VariableDeclaration"
                }
            },
            "type": "object"
        },
        "ClassDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "heritageClauses": {
                    "items": {
                        "$ref": "#/definitions/HeritageClause"
                    },
                    "type": "array"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ClassDeclaration"
                },
                "members": {
                    "items": {
                        "$ref": "#/definitions/ClassElement"
                    },
                    "type": "array"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier",
                    "description": "May be undefined in `export default class { ... }`."
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClassElement": {
            "properties": {
                "_classElementBrand": {
                },
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ClassExpression": {
            "properties": {
                "_declarationBrand": {
                },
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "heritageClauses": {
                    "items": {
                        "$ref": "#/definitions/HeritageClause"
                    },
                    "type": "array"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ClassExpression"
                },
                "members": {
                    "items": {
                        "$ref": "#/definitions/ClassElement"
                    },
                    "type": "array"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClassStaticBlockDeclaration": {
            "properties": {
                "_classElementBrand": {
                },
                "_declarationBrand": {
                },
                "body": {
                    "$ref": "#/definitions/Block"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ClassStaticBlockDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ClassDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassExpression"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "CompilerOptions": {
            "additionalProperties": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    {
                        "$ref": "#/definitions/TsConfigSourceFile"
                    },
                    {
                        "items": {
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "type": "array"
                    },
                    {
                        "$ref": "#/definitions/MapLike<string[]>"
                    },
                    {
                        "items": {
                            "$ref": "#/definitions/PluginImport"
                        },
                        "type": "array"
                    },
                    {
                        "items": {
                            "$ref": "#/definitions/ProjectReference"
                        },
                        "type": "array"
                    },
                    {
                        "type": [
                            "string",
                            "number",
                            "boolean"
                        ]
                    }
                ]
            },
            "properties": {
                "allowJs": {
                    "type": "boolean"
                },
                "allowSyntheticDefaultImports": {
                    "type": "boolean"
                },
                "allowUmdGlobalAccess": {
                    "type": "boolean"
                },
                "allowUnreachableCode": {
                    "type": "boolean"
                },
                "allowUnusedLabels": {
                    "type": "boolean"
                },
                "alwaysStrict": {
                    "type": "boolean"
                },
                "assumeChangesOnlyAffectDirectDependencies": {
                    "type": "boolean"
                },
                "baseUrl": {
                    "type": "string"
                },
                "charset": {
                    "type": "string"
                },
                "checkJs": {
                    "type": "boolean"
                },
                "composite": {
                    "type": "boolean"
                },
                "declaration": {
                    "type": "boolean"
                },
                "declarationDir": {
                    "type": "string"
                },
                "declarationMap": {
                    "type": "boolean"
                },
                "disableReferencedProjectLoad": {
                    "type": "boolean"
                },
                "disableSizeLimit": {
                    "type": "boolean"
                },
                "disableSolutionSearching": {
                    "type": "boolean"
                },
                "disableSourceOfProjectReferenceRedirect": {
                    "type": "boolean"
                },
                "downlevelIteration": {
                    "type": "boolean"
                },
                "emitBOM": {
                    "type": "boolean"
                },
                "emitDeclarationOnly": {
                    "type": "boolean"
                },
                "emitDecoratorMetadata": {
                    "type": "boolean"
                },
                "esModuleInterop": {
                    "type": "boolean"
                },
                "exactOptionalPropertyTypes": {
                    "type": "boolean"
                },
                "experimentalDecorators": {
                    "type": "boolean"
                },
                "forceConsistentCasingInFileNames": {
                    "type": "boolean"
                },
                "importHelpers": {
                    "type": "boolean"
                },
                "importsNotUsedAsValues": {
                    "$ref": "#/definitions/ImportsNotUsedAsValues"
                },
                "incremental": {
                    "type": "boolean"
                },
                "inlineSourceMap": {
                    "type": "boolean"
                },
                "inlineSources": {
                    "type": "boolean"
                },
                "isolatedModules": {
                    "type": "boolean"
                },
                "jsx": {
                    "$ref": "#/definitions/JsxEmit"
                },
                "jsxFactory": {
                    "type": "string"
                },
                "jsxFragmentFactory": {
                    "type": "string"
                },
                "jsxImportSource": {
                    "type": "string"
                },
                "keyofStringsOnly": {
                    "type": "boolean"
                },
                "lib": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "locale": {
                    "type": "string"
                },
                "mapRoot": {
                    "type": "string"
                },
                "maxNodeModuleJsDepth": {
                    "type": "number"
                },
                "module": {
                    "$ref": "#/definitions/ModuleKind"
                },
                "moduleResolution": {
                    "$ref": "#/definitions/ModuleResolutionKind"
                },
                "newLine": {
                    "$ref": "#/definitions/NewLineKind"
                },
                "noEmit": {
                    "type": "boolean"
                },
                "noEmitHelpers": {
                    "type": "boolean"
                },
                "noEmitOnError": {
                    "type": "boolean"
                },
                "noErrorTruncation": {
                    "type": "boolean"
                },
                "noFallthroughCasesInSwitch": {
                    "type": "boolean"
                },
                "noImplicitAny": {
                    "type": "boolean"
                },
                "noImplicitOverride": {
                    "type": "boolean"
                },
                "noImplicitReturns": {
                    "type": "boolean"
                },
                "noImplicitThis": {
                    "type": "boolean"
                },
                "noImplicitUseStrict": {
                    "type": "boolean"
                },
                "noLib": {
                    "type": "boolean"
                },
                "noPropertyAccessFromIndexSignature": {
                    "type": "boolean"
                },
                "noResolve": {
                    "type": "boolean"
                },
                "noStrictGenericChecks": {
                    "type": "boolean"
                },
                "noUncheckedIndexedAccess": {
                    "type": "boolean"
                },
                "noUnusedLocals": {
                    "type": "boolean"
                },
                "noUnusedParameters": {
                    "type": "boolean"
                },
                "out": {
                    "type": "string"
                },
                "outDir": {
                    "type": "string"
                },
                "outFile": {
                    "type": "string"
                },
                "paths": {
                    "$ref": "#/definitions/MapLike<string[]>"
                },
                "preserveConstEnums": {
                    "type": "boolean"
                },
                "preserveSymlinks": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "reactNamespace": {
                    "type": "string"
                },
                "removeComments": {
                    "type": "boolean"
                },
                "resolveJsonModule": {
                    "type": "boolean"
                },
                "rootDir": {
                    "type": "string"
                },
                "rootDirs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "skipDefaultLibCheck": {
                    "type": "boolean"
                },
                "skipLibCheck": {
                    "type": "boolean"
                },
                "sourceMap": {
                    "type": "boolean"
                },
                "sourceRoot": {
                    "type": "string"
                },
                "strict": {
                    "type": "boolean"
                },
                "strictBindCallApply": {
                    "type": "boolean"
                },
                "strictFunctionTypes": {
                    "type": "boolean"
                },
                "strictNullChecks": {
                    "type": "boolean"
                },
                "strictPropertyInitialization": {
                    "type": "boolean"
                },
                "stripInternal": {
                    "type": "boolean"
                },
                "suppressExcessPropertyErrors": {
                    "type": "boolean"
                },
                "suppressImplicitAnyIndexErrors": {
                    "type": "boolean"
                },
                "target": {
                    "$ref": "#/definitions/ScriptTarget"
                },
                "traceResolution": {
                    "type": "boolean"
                },
                "tsBuildInfoFile": {
                    "type": "string"
                },
                "typeRoots": {
                    "description": "Paths used to compute primary types search locations",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "useDefineForClassFields": {
                    "type": "boolean"
                },
                "useUnknownInCatchVariables": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ComputedPropertyName": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ComputedPropertyName"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Declaration"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ConstKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ConstKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ConstructSignatureDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_typeElementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ConstructSignature"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ConstructorDeclaration": {
            "properties": {
                "_classElementBrand": {
                },
                "_declarationBrand": {
                },
                "_functionLikeDeclarationBrand": {
                },
                "asteriskToken": {
                    "$ref": "#/definitions/AsteriskToken"
                },
                "body": {
                    "$ref": "#/definitions/Block"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "exclamationToken": {
                    "$ref": "#/definitions/ExclamationToken"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.Constructor"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ClassDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassExpression"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ConstructorTypeNode": {
            "properties": {
                "_declarationBrand": {
                },
                "_typeNodeBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ConstructorType"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ContinueStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ContinueStatement"
                },
                "label": {
                    "$ref": "#/definitions/Identifier"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DebuggerStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.DebuggerStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Declaration": {
            "properties": {
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DeclareKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.DeclareKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Decorator": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/LeftHandSideExpression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.Decorator"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/NamedDeclaration"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DefaultClause": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.DefaultClause"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/CaseBlock"
                },
                "pos": {
                    "type": "number"
                },
                "statements": {
                    "items": {
                        "$ref": "#/definitions/Statement"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DefaultKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.DefaultKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DoStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.DoStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "statement": {
                    "$ref": "#/definitions/Statement"
                }
            },
            "type": "object"
        },
        "DotDotDotToken": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.DotDotDotToken"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ElementAccessExpression": {
            "properties": {
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "argumentExpression": {
                    "$ref": "#/definitions/Expression"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/LeftHandSideExpression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ElementAccessExpression"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "questionDotToken": {
                    "$ref": "#/definitions/QuestionDotToken"
                }
            },
            "type": "object"
        },
        "EmptyStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.EmptyStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "EnumDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.EnumDeclaration"
                },
                "members": {
                    "items": {
                        "$ref": "#/definitions/EnumMember"
                    },
                    "type": "array"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "EnumMember": {
            "properties": {
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "initializer": {
                    "$ref": "#/definitions/Expression"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.EnumMember"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/EnumDeclaration"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "EqualsGreaterThanToken": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.EqualsGreaterThanToken"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "EqualsToken": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.EqualsToken"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ExclamationToken": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ExclamationToken"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ExportAssignment": {
            "description": "This is either an `export =` or an `export default` declaration.\nUnless `isExportEquals` is set, this node was parsed as an `export default`.",
            "properties": {
                "_declarationBrand": {
                },
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "isExportEquals": {
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ExportAssignment"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/SourceFile"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ExportDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "exportClause": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/NamespaceExport"
                        },
                        {
                            "$ref": "#/definitions/NamedExports"
                        }
                    ],
                    "description": "Will not be assigned in the case of `export * from \"foo\";`"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "isTypeOnly": {
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ExportDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "moduleSpecifier": {
                    "$ref": "#/definitions/Expression",
                    "description": "If this is not a StringLiteral it will be a grammar error."
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        }
                    ]
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/SourceFile"
                        },
                        {
                            "$ref": "#/definitions/ModuleBlock"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ExportKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ExportKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ExportSpecifier": {
            "properties": {
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ExportSpecifier"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "$ref": "#/definitions/NamedExports"
                },
                "pos": {
                    "type": "number"
                },
                "propertyName": {
                    "$ref": "#/definitions/Identifier"
                }
            },
            "type": "object"
        },
        "Expression": {
            "properties": {
                "_expressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ExpressionStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ExpressionStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ExpressionWithTypeArguments": {
            "properties": {
                "_typeNodeBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/LeftHandSideExpression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ExpressionWithTypeArguments"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/HeritageClause"
                        },
                        {
                            "$ref": "#/definitions/JSDocAugmentsTag"
                        },
                        {
                            "$ref": "#/definitions/JSDocImplementsTag"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "typeArguments": {
                    "items": {
                        "$ref": "#/definitions/TypeNode"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ExternalModuleReference": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ExternalModuleReference"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/ImportEqualsDeclaration"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "FalseLiteral": {
            "properties": {
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.FalseKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "FileReference": {
            "properties": {
                "end": {
                    "type": "number"
                },
                "fileName": {
                    "type": "string"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ForInStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "initializer": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Expression"
                        },
                        {
                            "$ref": "#/definitions/VariableDeclarationList"
                        }
                    ]
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ForInStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "statement": {
                    "$ref": "#/definitions/Statement"
                }
            },
            "type": "object"
        },
        "ForOfStatement": {
            "properties": {
                "_statementBrand": {
                },
                "awaitModifier": {
                    "$ref": "#/definitions/AwaitKeyword"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "initializer": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Expression"
                        },
                        {
                            "$ref": "#/definitions/VariableDeclarationList"
                        }
                    ]
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ForOfStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "statement": {
                    "$ref": "#/definitions/Statement"
                }
            },
            "type": "object"
        },
        "ForStatement": {
            "properties": {
                "_statementBrand": {
                },
                "condition": {
                    "$ref": "#/definitions/Expression"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "incrementor": {
                    "$ref": "#/definitions/Expression"
                },
                "initializer": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Expression"
                        },
                        {
                            "$ref": "#/definitions/VariableDeclarationList"
                        }
                    ]
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ForStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "statement": {
                    "$ref": "#/definitions/Statement"
                }
            },
            "type": "object"
        },
        "FunctionDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_functionLikeDeclarationBrand": {
                },
                "_statementBrand": {
                },
                "asteriskToken": {
                    "$ref": "#/definitions/AsteriskToken"
                },
                "body": {
                    "$ref": "#/definitions/Block"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "exclamationToken": {
                    "$ref": "#/definitions/ExclamationToken"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.FunctionDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FunctionExpression": {
            "properties": {
                "_declarationBrand": {
                },
                "_expressionBrand": {
                },
                "_functionLikeDeclarationBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "asteriskToken": {
                    "$ref": "#/definitions/AsteriskToken"
                },
                "body": {
                    "$ref": "#/definitions/Block"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "exclamationToken": {
                    "$ref": "#/definitions/ExclamationToken"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.FunctionExpression"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FunctionTypeNode": {
            "properties": {
                "_declarationBrand": {
                },
                "_typeNodeBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.FunctionType"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetAccessorDeclaration": {
            "properties": {
                "_classElementBrand": {
                },
                "_declarationBrand": {
                },
                "_functionLikeDeclarationBrand": {
                },
                "_objectLiteralBrand": {
                },
                "_typeElementBrand": {
                },
                "asteriskToken": {
                    "$ref": "#/definitions/AsteriskToken"
                },
                "body": {
                    "$ref": "#/definitions/Block"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "exclamationToken": {
                    "$ref": "#/definitions/ExclamationToken"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.GetAccessor"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ClassDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassExpression"
                        },
                        {
                            "$ref": "#/definitions/InterfaceDeclaration"
                        },
                        {
                            "$ref": "#/definitions/TypeLiteralNode"
                        },
                        {
                            "$ref": "#/definitions/ObjectLiteralExpression"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "HeritageClause": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.HeritageClause"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ClassDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassExpression"
                        },
                        {
                            "$ref": "#/definitions/InterfaceDeclaration"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "token": {
                    "enum": [
                        117,
                        94
                    ],
                    "type": "number"
                },
                "types": {
                    "items": {
                        "$ref": "#/definitions/ExpressionWithTypeArguments"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Identifier": {
            "properties": {
                "_declarationBrand": {
                },
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "escapedText": {
                    "anyOf": [
                        {
                            "allOf": [
                                {
                                    "properties": {
                                        "__escapedIdentifier": {
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        },
                        {
                            "allOf": [
                                {
                                },
                                {
                                    "properties": {
                                        "__escapedIdentifier": {
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        {
                            "enum": [
                                "__call",
                                "__class",
                                "__computed",
                                "__constructor",
                                "__export",
                                "__function",
                                "__global",
                                "__index",
                                "__jsxAttributes",
                                "__missing",
                                "__new",
                                "__object",
                                "__resolving__",
                                "__type",
                                "default",
                                "export=",
                                "this"
                            ],
                            "type": "string"
                        }
                    ],
                    "description": "Prefer to use `id.unescapedText`. (Note: This is available only in services, not internally to the TypeScript compiler.)\nText of identifier, but if the identifier begins with two underscores, this will begin with three."
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "isInJSDocNamespace": {
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.Identifier"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "originalKeywordKind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IfStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "elseStatement": {
                    "$ref": "#/definitions/Statement"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.IfStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "thenStatement": {
                    "$ref": "#/definitions/Statement"
                }
            },
            "type": "object"
        },
        "ImportClause": {
            "properties": {
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "isTypeOnly": {
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ImportClause"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "namedBindings": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/NamespaceImport"
                        },
                        {
                            "$ref": "#/definitions/NamedImports"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/ImportDeclaration"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ImportDeclaration": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "importClause": {
                    "$ref": "#/definitions/ImportClause"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ImportDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "moduleSpecifier": {
                    "$ref": "#/definitions/Expression",
                    "description": "If this is not a StringLiteral it will be a grammar error."
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/SourceFile"
                        },
                        {
                            "$ref": "#/definitions/ModuleBlock"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ImportEqualsDeclaration": {
            "description": "One of:\n- import x = require(\"mod\");\n- import x = M.x;",
            "properties": {
                "_declarationBrand": {
                },
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "isTypeOnly": {
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ImportEqualsDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "moduleReference": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/QualifiedName"
                        },
                        {
                            "$ref": "#/definitions/ExternalModuleReference"
                        }
                    ]
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/SourceFile"
                        },
                        {
                            "$ref": "#/definitions/ModuleBlock"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ImportSpecifier": {
            "properties": {
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ImportSpecifier"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "$ref": "#/definitions/NamedImports"
                },
                "pos": {
                    "type": "number"
                },
                "propertyName": {
                    "$ref": "#/definitions/Identifier"
                }
            },
            "type": "object"
        },
        "ImportsNotUsedAsValues": {
            "enum": [
                0,
                1,
                2
            ],
            "type": "number"
        },
        "IndexSignatureDeclaration": {
            "properties": {
                "_classElementBrand": {
                },
                "_declarationBrand": {
                },
                "_typeElementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.IndexSignature"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "$ref": "#/definitions/ObjectTypeDeclaration"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "InferTypeNode": {
            "properties": {
                "_typeNodeBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.InferType"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "typeParameter": {
                    "$ref": "#/definitions/TypeParameterDeclaration"
                }
            },
            "type": "object"
        },
        "InterfaceDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "heritageClauses": {
                    "items": {
                        "$ref": "#/definitions/HeritageClause"
                    },
                    "type": "array"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.InterfaceDeclaration"
                },
                "members": {
                    "items": {
                        "$ref": "#/definitions/TypeElement"
                    },
                    "type": "array"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JSDoc": {
            "properties": {
                "comment": {
                    "anyOf": [
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/JSDocLink"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkCode"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkPlain"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocText"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocComment"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ParameterDeclaration"
                        },
                        {
                            "$ref": "#/definitions/CallSignatureDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassStaticBlockDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ConstructSignatureDeclaration"
                        },
                        {
                            "$ref": "#/definitions/MethodSignature"
                        },
                        {
                            "$ref": "#/definitions/PropertySignature"
                        },
                        {
                            "$ref": "#/definitions/ArrowFunction"
                        },
                        {
                            "$ref": "#/definitions/ParenthesizedExpression"
                        },
                        {
                            "$ref": "#/definitions/SpreadAssignment"
                        },
                        {
                            "$ref": "#/definitions/ShorthandPropertyAssignment"
                        },
                        {
                            "$ref": "#/definitions/PropertyAssignment"
                        },
                        {
                            "$ref": "#/definitions/FunctionExpression"
                        },
                        {
                            "$ref": "#/definitions/EmptyStatement"
                        },
                        {
                            "$ref": "#/definitions/DebuggerStatement"
                        },
                        {
                            "$ref": "#/definitions/Block"
                        },
                        {
                            "$ref": "#/definitions/VariableStatement"
                        },
                        {
                            "$ref": "#/definitions/ExpressionStatement"
                        },
                        {
                            "$ref": "#/definitions/IfStatement"
                        },
                        {
                            "$ref": "#/definitions/DoStatement"
                        },
                        {
                            "$ref": "#/definitions/WhileStatement"
                        },
                        {
                            "$ref": "#/definitions/ForStatement"
                        },
                        {
                            "$ref": "#/definitions/ForInStatement"
                        },
                        {
                            "$ref": "#/definitions/ForOfStatement"
                        },
                        {
                            "$ref": "#/definitions/BreakStatement"
                        },
                        {
                            "$ref": "#/definitions/ContinueStatement"
                        },
                        {
                            "$ref": "#/definitions/ReturnStatement"
                        },
                        {
                            "$ref": "#/definitions/WithStatement"
                        },
                        {
                            "$ref": "#/definitions/SwitchStatement"
                        },
                        {
                            "$ref": "#/definitions/LabeledStatement"
                        },
                        {
                            "$ref": "#/definitions/ThrowStatement"
                        },
                        {
                            "$ref": "#/definitions/TryStatement"
                        },
                        {
                            "$ref": "#/definitions/FunctionDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ConstructorDeclaration"
                        },
                        {
                            "$ref": "#/definitions/MethodDeclaration"
                        },
                        {
                            "$ref": "#/definitions/VariableDeclaration"
                        },
                        {
                            "$ref": "#/definitions/PropertyDeclaration"
                        },
                        {
                            "$ref": "#/definitions/GetAccessorDeclaration"
                        },
                        {
                            "$ref": "#/definitions/SetAccessorDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassExpression"
                        },
                        {
                            "$ref": "#/definitions/InterfaceDeclaration"
                        },
                        {
                            "$ref": "#/definitions/TypeAliasDeclaration"
                        },
                        {
                            "$ref": "#/definitions/EnumMember"
                        },
                        {
                            "$ref": "#/definitions/EnumDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ModuleDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ImportEqualsDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ImportDeclaration"
                        },
                        {
                            "$ref": "#/definitions/NamespaceExportDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ExportAssignment"
                        },
                        {
                            "$ref": "#/definitions/IndexSignatureDeclaration"
                        },
                        {
                            "$ref": "#/definitions/FunctionTypeNode"
                        },
                        {
                            "$ref": "#/definitions/ConstructorTypeNode"
                        },
                        {
                            "$ref": "#/definitions/JSDocFunctionType"
                        },
                        {
                            "$ref": "#/definitions/ExportDeclaration"
                        },
                        {
                            "$ref": "#/definitions/NamedTupleMember"
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Token<SyntaxKind.EndOfFileToken>"
                                },
                                {
                                    "$ref": "#/definitions/JSDocContainer"
                                }
                            ]
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "tags": {
                    "items": {
                        "$ref": "#/definitions/JSDocTag"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JSDocAugmentsTag": {
            "description": "Note that `@extends` is a synonym of `@augments`.\nBoth tags are represented by this interface.",
            "properties": {
                "class": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExpressionWithTypeArguments"
                        },
                        {
                            "properties": {
                                "expression": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/definitions/Identifier"
                                        },
                                        {
                                            "$ref": "#/definitions/PropertyAccessEntityNameExpression"
                                        }
                                    ]
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "comment": {
                    "anyOf": [
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/JSDocLink"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkCode"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkPlain"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocText"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocAugmentsTag"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/JSDoc"
                        },
                        {
                            "$ref": "#/definitions/JSDocTypeLiteral"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "tagName": {
                    "$ref": "#/definitions/Identifier"
                }
            },
            "type": "object"
        },
        "JSDocContainer": {
            "type": "object"
        },
        "JSDocFunctionType": {
            "properties": {
                "_declarationBrand": {
                },
                "_jsDocTypeBrand": {
                },
                "_typeNodeBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocFunctionType"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JSDocImplementsTag": {
            "properties": {
                "class": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExpressionWithTypeArguments"
                        },
                        {
                            "properties": {
                                "expression": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/definitions/Identifier"
                                        },
                                        {
                                            "$ref": "#/definitions/PropertyAccessEntityNameExpression"
                                        }
                                    ]
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "comment": {
                    "anyOf": [
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/JSDocLink"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkCode"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkPlain"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocText"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocImplementsTag"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/JSDoc"
                        },
                        {
                            "$ref": "#/definitions/JSDocTypeLiteral"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "tagName": {
                    "$ref": "#/definitions/Identifier"
                }
            },
            "type": "object"
        },
        "JSDocLink": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocLink"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/QualifiedName"
                        },
                        {
                            "$ref": "#/definitions/JSDocMemberName"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JSDocLinkCode": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocLinkCode"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/QualifiedName"
                        },
                        {
                            "$ref": "#/definitions/JSDocMemberName"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JSDocLinkPlain": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocLinkPlain"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/QualifiedName"
                        },
                        {
                            "$ref": "#/definitions/JSDocMemberName"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JSDocMemberName": {
            "description": "Class#method reference in JSDoc",
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocMemberName"
                },
                "left": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/QualifiedName"
                        },
                        {
                            "$ref": "#/definitions/JSDocMemberName"
                        }
                    ]
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "right": {
                    "$ref": "#/definitions/Identifier"
                }
            },
            "type": "object"
        },
        "JSDocNamespaceDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_statementBrand": {
                },
                "body": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/JSDocNamespaceDeclaration"
                        }
                    ]
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ModuleDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/SourceFile"
                        },
                        {
                            "$ref": "#/definitions/ModuleBlock"
                        },
                        {
                            "$ref": "#/definitions/NamespaceDeclaration"
                        },
                        {
                            "$ref": "#/definitions/JSDocNamespaceDeclaration"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "JSDocPropertyLikeTag": {
            "properties": {
                "_declarationBrand": {
                },
                "comment": {
                    "anyOf": [
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/JSDocLink"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkCode"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkPlain"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocText"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "isBracketed": {
                    "type": "boolean"
                },
                "isNameFirst": {
                    "description": "Whether the property name came before the type -- non-standard for JSDoc, but Typescript-like",
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/QualifiedName"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/JSDoc"
                },
                "pos": {
                    "type": "number"
                },
                "tagName": {
                    "$ref": "#/definitions/Identifier"
                },
                "typeExpression": {
                    "$ref": "#/definitions/JSDocTypeExpression"
                }
            },
            "type": "object"
        },
        "JSDocTag": {
            "properties": {
                "comment": {
                    "anyOf": [
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/JSDocLink"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkCode"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkPlain"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocText"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/JSDoc"
                        },
                        {
                            "$ref": "#/definitions/JSDocTypeLiteral"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "tagName": {
                    "$ref": "#/definitions/Identifier"
                }
            },
            "type": "object"
        },
        "JSDocTemplateTag": {
            "properties": {
                "comment": {
                    "anyOf": [
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/JSDocLink"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkCode"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocLinkPlain"
                                    },
                                    {
                                        "$ref": "#/definitions/JSDocText"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "constraint": {
                    "$ref": "#/definitions/JSDocTypeExpression"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocTemplateTag"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/JSDoc"
                        },
                        {
                            "$ref": "#/definitions/JSDocTypeLiteral"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "tagName": {
                    "$ref": "#/definitions/Identifier"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JSDocText": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocText"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JSDocTypeExpression": {
            "properties": {
                "_typeNodeBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocTypeExpression"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                }
            },
            "type": "object"
        },
        "JSDocTypeLiteral": {
            "properties": {
                "_jsDocTypeBrand": {
                },
                "_typeNodeBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "isArrayType": {
                    "description": "If true, then this type literal represents an *array* of its type.",
                    "type": "boolean"
                },
                "jsDocPropertyTags": {
                    "items": {
                        "$ref": "#/definitions/JSDocPropertyLikeTag"
                    },
                    "type": "array"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.JSDocTypeLiteral"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "JsonMinusNumericLiteral": {
            "properties": {
                "_expressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.PrefixUnaryExpression"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "operand": {
                    "$ref": "#/definitions/NumericLiteral"
                },
                "operator": {
                    "$ref": "#/definitions/SyntaxKind.MinusToken"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "JsonObjectExpressionStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/NullLiteral"
                        },
                        {
                            "$ref": "#/definitions/TrueLiteral"
                        },
                        {
                            "$ref": "#/definitions/FalseLiteral"
                        },
                        {
                            "$ref": "#/definitions/ArrayLiteralExpression"
                        },
                        {
                            "$ref": "#/definitions/ObjectLiteralExpression"
                        },
                        {
                            "$ref": "#/definitions/JsonMinusNumericLiteral"
                        }
                    ]
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ExpressionStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "JsxEmit": {
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "type": "number"
        },
        "LabeledStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.LabeledStatement"
                },
                "label": {
                    "$ref": "#/definitions/Identifier"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "statement": {
                    "$ref": "#/definitions/Statement"
                }
            },
            "type": "object"
        },
        "LanguageVariant": {
            "enum": [
                0,
                1
            ],
            "type": "number"
        },
        "LeftHandSideExpression": {
            "properties": {
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "MapLike<string[]>": {
            "additionalProperties": {
                "$ref": "#/definitions/T"
            },
            "description": "Type of objects whose values are all of the same type.\nThe `in` and `for-in` operators can *not* be safely used,\nsince `Object.prototype` may be modified by outside code.",
            "type": "object"
        },
        "MethodDeclaration": {
            "properties": {
                "_classElementBrand": {
                },
                "_declarationBrand": {
                },
                "_functionLikeDeclarationBrand": {
                },
                "_objectLiteralBrand": {
                },
                "asteriskToken": {
                    "$ref": "#/definitions/AsteriskToken"
                },
                "body": {
                    "$ref": "#/definitions/Block"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "exclamationToken": {
                    "$ref": "#/definitions/ExclamationToken"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.MethodDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ClassDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassExpression"
                        },
                        {
                            "$ref": "#/definitions/ObjectLiteralExpression"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MethodSignature": {
            "properties": {
                "_declarationBrand": {
                },
                "_typeElementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.MethodSignature"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "$ref": "#/definitions/ObjectTypeDeclaration"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Modifier": {
            "anyOf": [
                {
                    "$ref": "#/definitions/AbstractKeyword"
                },
                {
                    "$ref": "#/definitions/AsyncKeyword"
                },
                {
                    "$ref": "#/definitions/ConstKeyword"
                },
                {
                    "$ref": "#/definitions/DeclareKeyword"
                },
                {
                    "$ref": "#/definitions/DefaultKeyword"
                },
                {
                    "$ref": "#/definitions/ExportKeyword"
                },
                {
                    "$ref": "#/definitions/PrivateKeyword"
                },
                {
                    "$ref": "#/definitions/ProtectedKeyword"
                },
                {
                    "$ref": "#/definitions/PublicKeyword"
                },
                {
                    "$ref": "#/definitions/ReadonlyKeyword"
                },
                {
                    "$ref": "#/definitions/OverrideKeyword"
                },
                {
                    "$ref": "#/definitions/StaticKeyword"
                }
            ]
        },
        "ModifiersArray": {
            "items": {
                "$ref": "#/definitions/Modifier"
            },
            "type": "array"
        },
        "ModuleBlock": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ModuleBlock"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/ModuleDeclaration"
                },
                "pos": {
                    "type": "number"
                },
                "statements": {
                    "items": {
                        "$ref": "#/definitions/Statement"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ModuleDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_statementBrand": {
                },
                "body": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/ModuleBlock"
                        },
                        {
                            "$ref": "#/definitions/NamespaceDeclaration"
                        },
                        {
                            "$ref": "#/definitions/JSDocNamespaceDeclaration"
                        }
                    ]
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ModuleDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        }
                    ]
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/SourceFile"
                        },
                        {
                            "$ref": "#/definitions/ModuleBlock"
                        },
                        {
                            "$ref": "#/definitions/NamespaceDeclaration"
                        },
                        {
                            "$ref": "#/definitions/JSDocNamespaceDeclaration"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ModuleKind": {
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                99
            ],
            "type": "number"
        },
        "ModuleResolutionKind": {
            "enum": [
                1,
                2
            ],
            "type": "number"
        },
        "NamedDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        },
                        {
                            "$ref": "#/definitions/NoSubstitutionTemplateLiteral"
                        },
                        {
                            "$ref": "#/definitions/ElementAccessExpression"
                        },
                        {
                            "$ref": "#/definitions/ObjectBindingPattern"
                        },
                        {
                            "$ref": "#/definitions/ArrayBindingPattern"
                        },
                        {
                            "$ref": "#/definitions/PropertyAccessEntityNameExpression"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "NamedExports": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "elements": {
                    "items": {
                        "$ref": "#/definitions/ExportSpecifier"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.NamedExports"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/ExportDeclaration"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "NamedImports": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "elements": {
                    "items": {
                        "$ref": "#/definitions/ImportSpecifier"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.NamedImports"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/ImportClause"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "NamedTupleMember": {
            "properties": {
                "_declarationBrand": {
                },
                "_typeNodeBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "dotDotDotToken": {
                    "$ref": "#/definitions/Token<SyntaxKind.DotDotDotToken>"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.NamedTupleMember"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/Token<SyntaxKind.QuestionToken>"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                }
            },
            "type": "object"
        },
        "NamespaceDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_statementBrand": {
                },
                "body": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ModuleBlock"
                        },
                        {
                            "$ref": "#/definitions/NamespaceDeclaration"
                        }
                    ]
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ModuleDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/SourceFile"
                        },
                        {
                            "$ref": "#/definitions/ModuleBlock"
                        },
                        {
                            "$ref": "#/definitions/NamespaceDeclaration"
                        },
                        {
                            "$ref": "#/definitions/JSDocNamespaceDeclaration"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "NamespaceExport": {
            "properties": {
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.NamespaceExport"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "$ref": "#/definitions/ExportDeclaration"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "NamespaceExportDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.NamespaceExportDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "NamespaceImport": {
            "properties": {
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.NamespaceImport"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "$ref": "#/definitions/ImportClause"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "NewLineKind": {
            "enum": [
                0,
                1
            ],
            "type": "number"
        },
        "NoSubstitutionTemplateLiteral": {
            "properties": {
                "_declarationBrand": {
                },
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_literalExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "hasExtendedUnicodeEscape": {
                    "type": "boolean"
                },
                "isUnterminated": {
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.NoSubstitutionTemplateLiteral"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "rawText": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Node": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "NodeFlags": {
            "enum": [
                0,
                1,
                1024,
                128,
                131072,
                16,
                16384,
                2,
                2048,
                25358336,
                256,
                262144,
                2816,
                3,
                32,
                32768,
                33554432,
                4,
                4096,
                40960,
                4194304,
                512,
                524288,
                64,
                65536,
                768,
                8,
                8192
            ],
            "type": "number"
        },
        "NullLiteral": {
            "properties": {
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.NullKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "NumericLiteral": {
            "properties": {
                "_declarationBrand": {
                },
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_literalExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "hasExtendedUnicodeEscape": {
                    "type": "boolean"
                },
                "isUnterminated": {
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.NumericLiteral"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ObjectBindingPattern": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "elements": {
                    "items": {
                        "$ref": "#/definitions/BindingElement"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ObjectBindingPattern"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ParameterDeclaration"
                        },
                        {
                            "$ref": "#/definitions/VariableDeclaration"
                        },
                        {
                            "$ref": "#/definitions/BindingElement"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ObjectLiteralExpression": {
            "properties": {
                "_declarationBrand": {
                },
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ObjectLiteralExpression"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "properties": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/SpreadAssignment"
                            },
                            {
                                "$ref": "#/definitions/ShorthandPropertyAssignment"
                            },
                            {
                                "$ref": "#/definitions/PropertyAssignment"
                            },
                            {
                                "$ref": "#/definitions/MethodDeclaration"
                            },
                            {
                                "$ref": "#/definitions/GetAccessorDeclaration"
                            },
                            {
                                "$ref": "#/definitions/SetAccessorDeclaration"
                            }
                        ],
                        "description": "Unlike ObjectLiteralElement, excludes JSXAttribute and JSXSpreadAttribute."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ObjectTypeDeclaration": {
            "anyOf": [
                {
                    "$ref": "#/definitions/ClassDeclaration"
                },
                {
                    "$ref": "#/definitions/ClassExpression"
                },
                {
                    "$ref": "#/definitions/InterfaceDeclaration"
                },
                {
                    "$ref": "#/definitions/TypeLiteralNode"
                }
            ]
        },
        "OmittedExpression": {
            "properties": {
                "_expressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.OmittedExpression"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "OverrideKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.OverrideKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ParameterDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "dotDotDotToken": {
                    "$ref": "#/definitions/DotDotDotToken"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "initializer": {
                    "$ref": "#/definitions/Expression"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.Parameter"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/BindingName"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/CallSignatureDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ConstructSignatureDeclaration"
                        },
                        {
                            "$ref": "#/definitions/MethodSignature"
                        },
                        {
                            "$ref": "#/definitions/ArrowFunction"
                        },
                        {
                            "$ref": "#/definitions/FunctionExpression"
                        },
                        {
                            "$ref": "#/definitions/FunctionDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ConstructorDeclaration"
                        },
                        {
                            "$ref": "#/definitions/MethodDeclaration"
                        },
                        {
                            "$ref": "#/definitions/GetAccessorDeclaration"
                        },
                        {
                            "$ref": "#/definitions/SetAccessorDeclaration"
                        },
                        {
                            "$ref": "#/definitions/IndexSignatureDeclaration"
                        },
                        {
                            "$ref": "#/definitions/FunctionTypeNode"
                        },
                        {
                            "$ref": "#/definitions/ConstructorTypeNode"
                        },
                        {
                            "$ref": "#/definitions/JSDocFunctionType"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                }
            },
            "type": "object"
        },
        "ParenthesizedExpression": {
            "properties": {
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ParenthesizedExpression"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PluginImport": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PrivateIdentifier": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "escapedText": {
                    "anyOf": [
                        {
                            "allOf": [
                                {
                                    "properties": {
                                        "__escapedIdentifier": {
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        },
                        {
                            "allOf": [
                                {
                                },
                                {
                                    "properties": {
                                        "__escapedIdentifier": {
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        {
                            "enum": [
                                "__call",
                                "__class",
                                "__computed",
                                "__constructor",
                                "__export",
                                "__function",
                                "__global",
                                "__index",
                                "__jsxAttributes",
                                "__missing",
                                "__new",
                                "__object",
                                "__resolving__",
                                "__type",
                                "default",
                                "export=",
                                "this"
                            ],
                            "type": "string"
                        }
                    ],
                    "description": "This represents a string whose leading underscore have been escaped by adding extra leading underscores.\nThe shape of this brand is rather unique compared to others we've used.\nInstead of just an intersection of a string and an object, it is that union-ed\nwith an intersection of void and an object. This makes it wholly incompatible\nwith a normal string (which is good, it cannot be misused on assignment or on usage),\nwhile still being comparable with a normal string via === (also good) and castable from a string."
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.PrivateIdentifier"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PrivateKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.PrivateKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ProjectReference": {
            "properties": {
                "circular": {
                    "description": "True if it is intended that this reference form a circularity",
                    "type": "boolean"
                },
                "originalPath": {
                    "description": "The path as the user originally wrote it",
                    "type": "string"
                },
                "path": {
                    "description": "A normalized path on disk",
                    "type": "string"
                },
                "prepend": {
                    "description": "True if the output of this reference should be prepended to the output of this project. Only valid for --outFile compilations",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PropertyAccessEntityNameExpression": {
            "description": "Brand for a PropertyAccessExpression which, like a QualifiedName, consists of a sequence of identifiers separated by dots.",
            "properties": {
                "_declarationBrand": {
                },
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_propertyAccessExpressionLikeQualifiedNameBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/PropertyAccessEntityNameExpression"
                        }
                    ]
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.PropertyAccessExpression"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "questionDotToken": {
                    "$ref": "#/definitions/QuestionDotToken"
                }
            },
            "type": "object"
        },
        "PropertyAssignment": {
            "properties": {
                "_declarationBrand": {
                },
                "_objectLiteralBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "exclamationToken": {
                    "$ref": "#/definitions/ExclamationToken"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "initializer": {
                    "$ref": "#/definitions/Expression"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.PropertyAssignment"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/ObjectLiteralExpression"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                }
            },
            "type": "object"
        },
        "PropertyDeclaration": {
            "properties": {
                "_classElementBrand": {
                },
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "exclamationToken": {
                    "$ref": "#/definitions/ExclamationToken"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "initializer": {
                    "$ref": "#/definitions/Expression"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.PropertyDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ClassDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassExpression"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                }
            },
            "type": "object"
        },
        "PropertySignature": {
            "properties": {
                "_declarationBrand": {
                },
                "_typeElementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "initializer": {
                    "$ref": "#/definitions/Expression"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.PropertySignature"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                }
            },
            "type": "object"
        },
        "ProtectedKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ProtectedKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PublicKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.PublicKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "QualifiedName": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.QualifiedName"
                },
                "left": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/QualifiedName"
                        }
                    ]
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "right": {
                    "$ref": "#/definitions/Identifier"
                }
            },
            "type": "object"
        },
        "QuestionDotToken": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.QuestionDotToken"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "QuestionToken": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.QuestionToken"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ReadonlyKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ReadonlyKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ReturnStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ReturnStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ScriptTarget": {
            "enum": [
                0,
                1,
                100,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                99
            ],
            "type": "number"
        },
        "SetAccessorDeclaration": {
            "properties": {
                "_classElementBrand": {
                },
                "_declarationBrand": {
                },
                "_functionLikeDeclarationBrand": {
                },
                "_objectLiteralBrand": {
                },
                "_typeElementBrand": {
                },
                "asteriskToken": {
                    "$ref": "#/definitions/AsteriskToken"
                },
                "body": {
                    "$ref": "#/definitions/Block"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "exclamationToken": {
                    "$ref": "#/definitions/ExclamationToken"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.SetAccessor"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/ParameterDeclaration"
                    },
                    "type": "array"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ClassDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassExpression"
                        },
                        {
                            "$ref": "#/definitions/InterfaceDeclaration"
                        },
                        {
                            "$ref": "#/definitions/TypeLiteralNode"
                        },
                        {
                            "$ref": "#/definitions/ObjectLiteralExpression"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ShorthandPropertyAssignment": {
            "properties": {
                "_declarationBrand": {
                },
                "_objectLiteralBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "equalsToken": {
                    "$ref": "#/definitions/EqualsToken"
                },
                "exclamationToken": {
                    "$ref": "#/definitions/ExclamationToken"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ShorthandPropertyAssignment"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "objectAssignmentInitializer": {
                    "$ref": "#/definitions/Expression"
                },
                "parent": {
                    "$ref": "#/definitions/ObjectLiteralExpression"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                }
            },
            "type": "object"
        },
        "SourceFile": {
            "properties": {
                "_declarationBrand": {
                },
                "amdDependencies": {
                    "items": {
                        "$ref": "#/definitions/AmdDependency"
                    },
                    "type": "array"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "endOfFileToken": {
                    "$ref": "#/definitions/Token<SyntaxKind.EndOfFileToken>"
                },
                "fileName": {
                    "type": "string"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "hasNoDefaultLib": {
                    "description": "lib.d.ts should have a reference comment like\n\n /// <reference no-default-lib=\"true\"/>\n\nIf any other file has this comment, it signals not to include lib.d.ts\nbecause this containing file is intended to act as a default library.",
                    "type": "boolean"
                },
                "isDeclarationFile": {
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.SourceFile"
                },
                "languageVariant": {
                    "$ref": "#/definitions/LanguageVariant"
                },
                "languageVersion": {
                    "$ref": "#/definitions/ScriptTarget"
                },
                "libReferenceDirectives": {
                    "items": {
                        "$ref": "#/definitions/FileReference"
                    },
                    "type": "array"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "moduleName": {
                    "type": "string"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "referencedFiles": {
                    "items": {
                        "$ref": "#/definitions/FileReference"
                    },
                    "type": "array"
                },
                "statements": {
                    "items": {
                        "$ref": "#/definitions/Statement"
                    },
                    "type": "array"
                },
                "text": {
                    "type": "string"
                },
                "typeReferenceDirectives": {
                    "items": {
                        "$ref": "#/definitions/FileReference"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SpreadAssignment": {
            "properties": {
                "_declarationBrand": {
                },
                "_objectLiteralBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.SpreadAssignment"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/ObjectLiteralExpression"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Statement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "StaticKeyword": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.StaticKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "StringLiteral": {
            "properties": {
                "_declarationBrand": {
                },
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_literalExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "hasExtendedUnicodeEscape": {
                    "type": "boolean"
                },
                "isUnterminated": {
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.StringLiteral"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SwitchStatement": {
            "properties": {
                "_statementBrand": {
                },
                "caseBlock": {
                    "$ref": "#/definitions/CaseBlock"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.SwitchStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "possiblyExhaustive": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SyntaxKind": {
            "enum": [
                0,
                1,
                10,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                11,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                12,
                120,
                121,
                122,
                123,
                124,
                125,
                126,
                127,
                128,
                129,
                13,
                130,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                139,
                14,
                140,
                141,
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                149,
                15,
                150,
                151,
                152,
                153,
                154,
                155,
                156,
                157,
                158,
                159,
                16,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                17,
                170,
                171,
                172,
                173,
                174,
                175,
                176,
                177,
                178,
                179,
                18,
                180,
                181,
                182,
                183,
                184,
                185,
                186,
                187,
                188,
                189,
                19,
                190,
                191,
                192,
                193,
                194,
                195,
                196,
                197,
                198,
                199,
                2,
                20,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                21,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                22,
                220,
                221,
                222,
                223,
                224,
                225,
                226,
                227,
                228,
                229,
                23,
                230,
                231,
                232,
                233,
                234,
                235,
                236,
                237,
                238,
                239,
                24,
                240,
                241,
                242,
                243,
                244,
                245,
                246,
                247,
                248,
                249,
                25,
                250,
                251,
                252,
                253,
                254,
                255,
                256,
                257,
                258,
                259,
                26,
                260,
                261,
                262,
                263,
                264,
                265,
                266,
                267,
                268,
                269,
                27,
                270,
                271,
                272,
                273,
                274,
                275,
                276,
                277,
                278,
                279,
                28,
                280,
                281,
                282,
                283,
                284,
                285,
                286,
                287,
                288,
                289,
                29,
                290,
                291,
                292,
                293,
                294,
                295,
                296,
                297,
                298,
                299,
                3,
                30,
                300,
                301,
                302,
                303,
                304,
                305,
                306,
                307,
                308,
                309,
                31,
                310,
                311,
                312,
                313,
                314,
                315,
                316,
                317,
                318,
                319,
                32,
                320,
                321,
                322,
                323,
                324,
                325,
                326,
                327,
                328,
                329,
                33,
                330,
                331,
                332,
                333,
                334,
                335,
                336,
                337,
                338,
                339,
                34,
                340,
                341,
                342,
                343,
                344,
                345,
                346,
                347,
                348,
                349,
                35,
                350,
                36,
                37,
                38,
                39,
                4,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                5,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                6,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                7,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                8,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                9,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99
            ],
            "type": "number"
        },
        "SyntaxKind.AbstractKeyword": {
            "enum": [
                126
            ],
            "type": "number"
        },
        "SyntaxKind.ArrayBindingPattern": {
            "enum": [
                200
            ],
            "type": "number"
        },
        "SyntaxKind.ArrayLiteralExpression": {
            "enum": [
                202
            ],
            "type": "number"
        },
        "SyntaxKind.ArrowFunction": {
            "enum": [
                212
            ],
            "type": "number"
        },
        "SyntaxKind.AsteriskToken": {
            "enum": [
                41
            ],
            "type": "number"
        },
        "SyntaxKind.AsyncKeyword": {
            "enum": [
                130
            ],
            "type": "number"
        },
        "SyntaxKind.AwaitKeyword": {
            "enum": [
                131
            ],
            "type": "number"
        },
        "SyntaxKind.BindingElement": {
            "enum": [
                201
            ],
            "type": "number"
        },
        "SyntaxKind.Block": {
            "enum": [
                233
            ],
            "type": "number"
        },
        "SyntaxKind.BreakStatement": {
            "enum": [
                244
            ],
            "type": "number"
        },
        "SyntaxKind.CallSignature": {
            "enum": [
                172
            ],
            "type": "number"
        },
        "SyntaxKind.CaseBlock": {
            "enum": [
                261
            ],
            "type": "number"
        },
        "SyntaxKind.CaseClause": {
            "enum": [
                287
            ],
            "type": "number"
        },
        "SyntaxKind.CatchClause": {
            "enum": [
                290
            ],
            "type": "number"
        },
        "SyntaxKind.ClassDeclaration": {
            "enum": [
                255
            ],
            "type": "number"
        },
        "SyntaxKind.ClassExpression": {
            "enum": [
                224
            ],
            "type": "number"
        },
        "SyntaxKind.ClassStaticBlockDeclaration": {
            "enum": [
                168
            ],
            "type": "number"
        },
        "SyntaxKind.ComputedPropertyName": {
            "enum": [
                160
            ],
            "type": "number"
        },
        "SyntaxKind.ConstKeyword": {
            "enum": [
                85
            ],
            "type": "number"
        },
        "SyntaxKind.ConstructSignature": {
            "enum": [
                173
            ],
            "type": "number"
        },
        "SyntaxKind.Constructor": {
            "enum": [
                169
            ],
            "type": "number"
        },
        "SyntaxKind.ConstructorType": {
            "enum": [
                178
            ],
            "type": "number"
        },
        "SyntaxKind.ContinueStatement": {
            "enum": [
                243
            ],
            "type": "number"
        },
        "SyntaxKind.DebuggerStatement": {
            "enum": [
                251
            ],
            "type": "number"
        },
        "SyntaxKind.DeclareKeyword": {
            "enum": [
                134
            ],
            "type": "number"
        },
        "SyntaxKind.Decorator": {
            "enum": [
                163
            ],
            "type": "number"
        },
        "SyntaxKind.DefaultClause": {
            "enum": [
                288
            ],
            "type": "number"
        },
        "SyntaxKind.DefaultKeyword": {
            "enum": [
                88
            ],
            "type": "number"
        },
        "SyntaxKind.DoStatement": {
            "enum": [
                238
            ],
            "type": "number"
        },
        "SyntaxKind.DotDotDotToken": {
            "enum": [
                25
            ],
            "type": "number"
        },
        "SyntaxKind.ElementAccessExpression": {
            "enum": [
                205
            ],
            "type": "number"
        },
        "SyntaxKind.EmptyStatement": {
            "enum": [
                234
            ],
            "type": "number"
        },
        "SyntaxKind.EndOfFileToken": {
            "enum": [
                1
            ],
            "type": "number"
        },
        "SyntaxKind.EnumDeclaration": {
            "enum": [
                258
            ],
            "type": "number"
        },
        "SyntaxKind.EnumMember": {
            "enum": [
                294
            ],
            "type": "number"
        },
        "SyntaxKind.EqualsGreaterThanToken": {
            "enum": [
                38
            ],
            "type": "number"
        },
        "SyntaxKind.EqualsToken": {
            "enum": [
                63
            ],
            "type": "number"
        },
        "SyntaxKind.ExclamationToken": {
            "enum": [
                53
            ],
            "type": "number"
        },
        "SyntaxKind.ExportAssignment": {
            "enum": [
                269
            ],
            "type": "number"
        },
        "SyntaxKind.ExportDeclaration": {
            "enum": [
                270
            ],
            "type": "number"
        },
        "SyntaxKind.ExportKeyword": {
            "enum": [
                93
            ],
            "type": "number"
        },
        "SyntaxKind.ExportSpecifier": {
            "enum": [
                273
            ],
            "type": "number"
        },
        "SyntaxKind.ExpressionStatement": {
            "enum": [
                236
            ],
            "type": "number"
        },
        "SyntaxKind.ExpressionWithTypeArguments": {
            "enum": [
                226
            ],
            "type": "number"
        },
        "SyntaxKind.ExternalModuleReference": {
            "enum": [
                275
            ],
            "type": "number"
        },
        "SyntaxKind.FalseKeyword": {
            "enum": [
                95
            ],
            "type": "number"
        },
        "SyntaxKind.ForInStatement": {
            "enum": [
                241
            ],
            "type": "number"
        },
        "SyntaxKind.ForOfStatement": {
            "enum": [
                242
            ],
            "type": "number"
        },
        "SyntaxKind.ForStatement": {
            "enum": [
                240
            ],
            "type": "number"
        },
        "SyntaxKind.FunctionDeclaration": {
            "enum": [
                254
            ],
            "type": "number"
        },
        "SyntaxKind.FunctionExpression": {
            "enum": [
                211
            ],
            "type": "number"
        },
        "SyntaxKind.FunctionType": {
            "enum": [
                177
            ],
            "type": "number"
        },
        "SyntaxKind.GetAccessor": {
            "enum": [
                170
            ],
            "type": "number"
        },
        "SyntaxKind.HeritageClause": {
            "enum": [
                289
            ],
            "type": "number"
        },
        "SyntaxKind.Identifier": {
            "enum": [
                79
            ],
            "type": "number"
        },
        "SyntaxKind.IfStatement": {
            "enum": [
                237
            ],
            "type": "number"
        },
        "SyntaxKind.ImportClause": {
            "enum": [
                265
            ],
            "type": "number"
        },
        "SyntaxKind.ImportDeclaration": {
            "enum": [
                264
            ],
            "type": "number"
        },
        "SyntaxKind.ImportEqualsDeclaration": {
            "enum": [
                263
            ],
            "type": "number"
        },
        "SyntaxKind.ImportSpecifier": {
            "enum": [
                268
            ],
            "type": "number"
        },
        "SyntaxKind.IndexSignature": {
            "enum": [
                174
            ],
            "type": "number"
        },
        "SyntaxKind.InferType": {
            "enum": [
                188
            ],
            "type": "number"
        },
        "SyntaxKind.InterfaceDeclaration": {
            "enum": [
                256
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocAugmentsTag": {
            "enum": [
                323
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocComment": {
            "enum": [
                315
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocFunctionType": {
            "enum": [
                312
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocImplementsTag": {
            "enum": [
                324
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocLink": {
            "enum": [
                319
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocLinkCode": {
            "enum": [
                320
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocLinkPlain": {
            "enum": [
                321
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocMemberName": {
            "enum": [
                306
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocTemplateTag": {
            "enum": [
                339
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocText": {
            "enum": [
                316
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocTypeExpression": {
            "enum": [
                304
            ],
            "type": "number"
        },
        "SyntaxKind.JSDocTypeLiteral": {
            "enum": [
                317
            ],
            "type": "number"
        },
        "SyntaxKind.LabeledStatement": {
            "enum": [
                248
            ],
            "type": "number"
        },
        "SyntaxKind.MethodDeclaration": {
            "enum": [
                167
            ],
            "type": "number"
        },
        "SyntaxKind.MethodSignature": {
            "enum": [
                166
            ],
            "type": "number"
        },
        "SyntaxKind.MinusToken": {
            "enum": [
                40
            ],
            "type": "number"
        },
        "SyntaxKind.ModuleBlock": {
            "enum": [
                260
            ],
            "type": "number"
        },
        "SyntaxKind.ModuleDeclaration": {
            "enum": [
                259
            ],
            "type": "number"
        },
        "SyntaxKind.NamedExports": {
            "enum": [
                271
            ],
            "type": "number"
        },
        "SyntaxKind.NamedImports": {
            "enum": [
                267
            ],
            "type": "number"
        },
        "SyntaxKind.NamedTupleMember": {
            "enum": [
                195
            ],
            "type": "number"
        },
        "SyntaxKind.NamespaceExport": {
            "enum": [
                272
            ],
            "type": "number"
        },
        "SyntaxKind.NamespaceExportDeclaration": {
            "enum": [
                262
            ],
            "type": "number"
        },
        "SyntaxKind.NamespaceImport": {
            "enum": [
                266
            ],
            "type": "number"
        },
        "SyntaxKind.NoSubstitutionTemplateLiteral": {
            "enum": [
                14
            ],
            "type": "number"
        },
        "SyntaxKind.NullKeyword": {
            "enum": [
                104
            ],
            "type": "number"
        },
        "SyntaxKind.NumericLiteral": {
            "enum": [
                8
            ],
            "type": "number"
        },
        "SyntaxKind.ObjectBindingPattern": {
            "enum": [
                199
            ],
            "type": "number"
        },
        "SyntaxKind.ObjectLiteralExpression": {
            "enum": [
                203
            ],
            "type": "number"
        },
        "SyntaxKind.OmittedExpression": {
            "enum": [
                225
            ],
            "type": "number"
        },
        "SyntaxKind.OverrideKeyword": {
            "enum": [
                157
            ],
            "type": "number"
        },
        "SyntaxKind.Parameter": {
            "enum": [
                162
            ],
            "type": "number"
        },
        "SyntaxKind.ParenthesizedExpression": {
            "enum": [
                210
            ],
            "type": "number"
        },
        "SyntaxKind.PrefixUnaryExpression": {
            "enum": [
                217
            ],
            "type": "number"
        },
        "SyntaxKind.PrivateIdentifier": {
            "enum": [
                80
            ],
            "type": "number"
        },
        "SyntaxKind.PrivateKeyword": {
            "enum": [
                121
            ],
            "type": "number"
        },
        "SyntaxKind.PropertyAccessExpression": {
            "enum": [
                204
            ],
            "type": "number"
        },
        "SyntaxKind.PropertyAssignment": {
            "enum": [
                291
            ],
            "type": "number"
        },
        "SyntaxKind.PropertyDeclaration": {
            "enum": [
                165
            ],
            "type": "number"
        },
        "SyntaxKind.PropertySignature": {
            "enum": [
                164
            ],
            "type": "number"
        },
        "SyntaxKind.ProtectedKeyword": {
            "enum": [
                122
            ],
            "type": "number"
        },
        "SyntaxKind.PublicKeyword": {
            "enum": [
                123
            ],
            "type": "number"
        },
        "SyntaxKind.QualifiedName": {
            "enum": [
                159
            ],
            "type": "number"
        },
        "SyntaxKind.QuestionDotToken": {
            "enum": [
                28
            ],
            "type": "number"
        },
        "SyntaxKind.QuestionToken": {
            "enum": [
                57
            ],
            "type": "number"
        },
        "SyntaxKind.ReadonlyKeyword": {
            "enum": [
                143
            ],
            "type": "number"
        },
        "SyntaxKind.ReturnStatement": {
            "enum": [
                245
            ],
            "type": "number"
        },
        "SyntaxKind.SetAccessor": {
            "enum": [
                171
            ],
            "type": "number"
        },
        "SyntaxKind.ShorthandPropertyAssignment": {
            "enum": [
                292
            ],
            "type": "number"
        },
        "SyntaxKind.SourceFile": {
            "enum": [
                300
            ],
            "type": "number"
        },
        "SyntaxKind.SpreadAssignment": {
            "enum": [
                293
            ],
            "type": "number"
        },
        "SyntaxKind.StaticKeyword": {
            "enum": [
                124
            ],
            "type": "number"
        },
        "SyntaxKind.StringLiteral": {
            "enum": [
                10
            ],
            "type": "number"
        },
        "SyntaxKind.SwitchStatement": {
            "enum": [
                247
            ],
            "type": "number"
        },
        "SyntaxKind.ThrowStatement": {
            "enum": [
                249
            ],
            "type": "number"
        },
        "SyntaxKind.TrueKeyword": {
            "enum": [
                110
            ],
            "type": "number"
        },
        "SyntaxKind.TryStatement": {
            "enum": [
                250
            ],
            "type": "number"
        },
        "SyntaxKind.TypeAliasDeclaration": {
            "enum": [
                257
            ],
            "type": "number"
        },
        "SyntaxKind.TypeLiteral": {
            "enum": [
                180
            ],
            "type": "number"
        },
        "SyntaxKind.TypeParameter": {
            "enum": [
                161
            ],
            "type": "number"
        },
        "SyntaxKind.VariableDeclaration": {
            "enum": [
                252
            ],
            "type": "number"
        },
        "SyntaxKind.VariableDeclarationList": {
            "enum": [
                253
            ],
            "type": "number"
        },
        "SyntaxKind.VariableStatement": {
            "enum": [
                235
            ],
            "type": "number"
        },
        "SyntaxKind.WhileStatement": {
            "enum": [
                239
            ],
            "type": "number"
        },
        "SyntaxKind.WithStatement": {
            "enum": [
                246
            ],
            "type": "number"
        },
        "T": {
            "type": "object"
        },
        "ThrowStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.ThrowStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Token<SyntaxKind.DotDotDotToken>": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.DotDotDotToken"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Token<SyntaxKind.EndOfFileToken>": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.EndOfFileToken"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Token<SyntaxKind.QuestionToken>": {
            "properties": {
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.QuestionToken"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "TrueLiteral": {
            "properties": {
                "_expressionBrand": {
                },
                "_leftHandSideExpressionBrand": {
                },
                "_memberExpressionBrand": {
                },
                "_primaryExpressionBrand": {
                },
                "_unaryExpressionBrand": {
                },
                "_updateExpressionBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.TrueKeyword"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "TryStatement": {
            "properties": {
                "_statementBrand": {
                },
                "catchClause": {
                    "$ref": "#/definitions/CatchClause"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "finallyBlock": {
                    "$ref": "#/definitions/Block"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.TryStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "tryBlock": {
                    "$ref": "#/definitions/Block"
                }
            },
            "type": "object"
        },
        "TsConfigSourceFile": {
            "properties": {
                "_declarationBrand": {
                },
                "amdDependencies": {
                    "items": {
                        "$ref": "#/definitions/AmdDependency"
                    },
                    "type": "array"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "endOfFileToken": {
                    "$ref": "#/definitions/Token<SyntaxKind.EndOfFileToken>"
                },
                "extendedSourceFiles": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fileName": {
                    "type": "string"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "hasNoDefaultLib": {
                    "description": "lib.d.ts should have a reference comment like\n\n /// <reference no-default-lib=\"true\"/>\n\nIf any other file has this comment, it signals not to include lib.d.ts\nbecause this containing file is intended to act as a default library.",
                    "type": "boolean"
                },
                "isDeclarationFile": {
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.SourceFile"
                },
                "languageVariant": {
                    "$ref": "#/definitions/LanguageVariant"
                },
                "languageVersion": {
                    "$ref": "#/definitions/ScriptTarget"
                },
                "libReferenceDirectives": {
                    "items": {
                        "$ref": "#/definitions/FileReference"
                    },
                    "type": "array"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "moduleName": {
                    "type": "string"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "referencedFiles": {
                    "items": {
                        "$ref": "#/definitions/FileReference"
                    },
                    "type": "array"
                },
                "statements": {
                    "items": {
                        "$ref": "#/definitions/JsonObjectExpressionStatement"
                    },
                    "type": "array"
                },
                "text": {
                    "type": "string"
                },
                "typeReferenceDirectives": {
                    "items": {
                        "$ref": "#/definitions/FileReference"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TypeAliasDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.TypeAliasDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/TypeParameterDeclaration"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TypeElement": {
            "properties": {
                "_declarationBrand": {
                },
                "_typeElementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Identifier"
                        },
                        {
                            "$ref": "#/definitions/StringLiteral"
                        },
                        {
                            "$ref": "#/definitions/NumericLiteral"
                        },
                        {
                            "$ref": "#/definitions/ComputedPropertyName"
                        },
                        {
                            "$ref": "#/definitions/PrivateIdentifier"
                        }
                    ]
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "questionToken": {
                    "$ref": "#/definitions/QuestionToken"
                }
            },
            "type": "object"
        },
        "TypeLiteralNode": {
            "properties": {
                "_declarationBrand": {
                },
                "_typeNodeBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.TypeLiteral"
                },
                "members": {
                    "items": {
                        "$ref": "#/definitions/TypeElement"
                    },
                    "type": "array"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "TypeNode": {
            "properties": {
                "_typeNodeBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "TypeParameterDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "constraint": {
                    "$ref": "#/definitions/TypeNode",
                    "description": "Note: Consider calling `getEffectiveConstraintOfTypeParameter`"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "default": {
                    "$ref": "#/definitions/TypeNode"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.TypeParameter"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/Identifier"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/CallSignatureDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ConstructSignatureDeclaration"
                        },
                        {
                            "$ref": "#/definitions/MethodSignature"
                        },
                        {
                            "$ref": "#/definitions/ArrowFunction"
                        },
                        {
                            "$ref": "#/definitions/FunctionExpression"
                        },
                        {
                            "$ref": "#/definitions/FunctionDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ConstructorDeclaration"
                        },
                        {
                            "$ref": "#/definitions/MethodDeclaration"
                        },
                        {
                            "$ref": "#/definitions/GetAccessorDeclaration"
                        },
                        {
                            "$ref": "#/definitions/SetAccessorDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassDeclaration"
                        },
                        {
                            "$ref": "#/definitions/ClassExpression"
                        },
                        {
                            "$ref": "#/definitions/InterfaceDeclaration"
                        },
                        {
                            "$ref": "#/definitions/TypeAliasDeclaration"
                        },
                        {
                            "$ref": "#/definitions/IndexSignatureDeclaration"
                        },
                        {
                            "$ref": "#/definitions/FunctionTypeNode"
                        },
                        {
                            "$ref": "#/definitions/ConstructorTypeNode"
                        },
                        {
                            "$ref": "#/definitions/JSDocFunctionType"
                        },
                        {
                            "$ref": "#/definitions/InferTypeNode"
                        },
                        {
                            "$ref": "#/definitions/JSDocTemplateTag"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "VariableDeclaration": {
            "properties": {
                "_declarationBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "exclamationToken": {
                    "$ref": "#/definitions/ExclamationToken"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "initializer": {
                    "$ref": "#/definitions/Expression"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.VariableDeclaration"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "name": {
                    "$ref": "#/definitions/BindingName"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/VariableDeclarationList"
                        },
                        {
                            "$ref": "#/definitions/CatchClause"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/TypeNode"
                }
            },
            "type": "object"
        },
        "VariableDeclarationList": {
            "properties": {
                "declarations": {
                    "items": {
                        "$ref": "#/definitions/VariableDeclaration"
                    },
                    "type": "array"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.VariableDeclarationList"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/VariableStatement"
                        },
                        {
                            "$ref": "#/definitions/ForStatement"
                        },
                        {
                            "$ref": "#/definitions/ForInStatement"
                        },
                        {
                            "$ref": "#/definitions/ForOfStatement"
                        }
                    ]
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "VariableStatement": {
            "properties": {
                "_statementBrand": {
                },
                "declarationList": {
                    "$ref": "#/definitions/VariableDeclarationList"
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.VariableStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "WhileStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.WhileStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "statement": {
                    "$ref": "#/definitions/Statement"
                }
            },
            "type": "object"
        },
        "WithStatement": {
            "properties": {
                "_statementBrand": {
                },
                "decorators": {
                    "items": {
                        "$ref": "#/definitions/Decorator"
                    },
                    "type": "array"
                },
                "end": {
                    "type": "number"
                },
                "expression": {
                    "$ref": "#/definitions/Expression"
                },
                "flags": {
                    "$ref": "#/definitions/NodeFlags"
                },
                "kind": {
                    "$ref": "#/definitions/SyntaxKind.WithStatement"
                },
                "modifiers": {
                    "$ref": "#/definitions/ModifiersArray"
                },
                "parent": {
                    "$ref": "#/definitions/Node"
                },
                "pos": {
                    "type": "number"
                },
                "statement": {
                    "$ref": "#/definitions/Statement"
                }
            },
            "type": "object"
        }
    },
    "properties": {
        "defaults": {
            "allOf": [
                {
                    "properties": {
                        "compilerOptions": {
                            "$ref": "#/definitions/CompilerOptions"
                        },
                        "exclude": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "files": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "include": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                {
                    "properties": {
                        "ignoreDtCheck": {
                            "default": false,
                            "description": "If we shouldn't make a request and verify if the package has and @types/package npm module available.",
                            "type": "boolean"
                        },
                        "merge": {
                            "default": false,
                            "description": "If this specific configuration should be merged with the defaults. Obviously, prevails over defaults.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "packages": {
            "items": {
                "anyOf": [
                    {
                        "items": [
                            {
                                "type": "string"
                            },
                            {
                                "allOf": [
                                    {
                                        "properties": {
                                            "compilerOptions": {
                                                "$ref": "#/definitions/CompilerOptions"
                                            },
                                            "exclude": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "files": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "include": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "ignoreDtCheck": {
                                                "default": false,
                                                "description": "If we shouldn't make a request and verify if the package has and @types/package npm module available.",
                                                "type": "boolean"
                                            },
                                            "merge": {
                                                "default": false,
                                                "description": "If this specific configuration should be merged with the defaults. Obviously, prevails over defaults.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        ],
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    {
                        "type": "string"
                    }
                ]
            },
            "type": "array"
        }
    },
    "type": "object"
}

