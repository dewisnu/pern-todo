"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.run = void 0;
const lodash_merge_1 = __importDefault(require("lodash.merge"));
const config_1 = require("../config");
const package_1 = require("../package");
const log_1 = require("../util/log");
async function run() {
    const config = await (0, config_1.readConfig)();
    const { defaults, packages } = (0, config_1.parseConfig)(config);
    if (packages.length < 1) {
        log_1.log.warn `No packages could be found for this configuration.`;
        return;
    }
    const promises = packages.map((pkg) => {
        if (Array.isArray(pkg)) {
            const [name, config] = pkg;
            return (0, package_1.processPackage)(name, config.merge ? (0, lodash_merge_1.default)(defaults, config) : config);
        }
        return (0, package_1.processPackage)(pkg, defaults);
    });
    const results = await Promise.all(promises);
    log_1.log.info `Generated types for ${results.filter((r) => !!r).length + ''} package(s) out of ${packages.length}.`;
}
exports.run = run;
//# sourceMappingURL=run.js.map