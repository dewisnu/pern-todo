"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.processPackage = void 0;
const path_1 = __importDefault(require("path"));
const defaults_1 = require("../config/defaults");
const api_1 = require("../npm/api");
const log_1 = require("../util/log");
const package_json_1 = require("../util/package-json");
const path_2 = require("../util/path");
const emitter_1 = require("./emitter");
const info_1 = require("./info");
/**
 * Starts the processing of a package
 *
 * @param {string} name their name
 * @param {PackageConfig} config the tsconfig.json options record that should be used
 * @return {Promise<boolean>} a promise that resolves true if the d.ts files were created successfully.
 */
async function processPackage(name, config) {
    const pkgDir = (0, path_2.findPackage)(name);
    const packageInfo = await (0, info_1.getPackageInfo)(name, pkgDir, config);
    if (packageInfo.declarator.typed) {
        log_1.log.debug `Package ${name} is already typed`;
        return false;
    }
    if (!config.ignoreDtCheck) {
        const existsTypes = await (0, api_1.hasNpmPackage)(`@types/${name}`);
        if (existsTypes) {
            log_1.log.warn `An @types/${name} package is available!\n Install it at https://npmjs.com/package/@types/${name}. Use ignoreDtCheck to hide this warning.`;
            return false;
        }
    }
    const emitted = await (0, emitter_1.emitTypes)(name, pkgDir, packageInfo);
    if (emitted) {
        await (0, package_json_1.editPackageJson)(pkgDir, (atual) => {
            const main = atual.main?.replace(/js$/, 'd.ts') || 'index.d.ts';
            const outDir = packageInfo.compilerOptions?.outDir ||
                defaults_1.defaultOptions.defaults.compilerOptions.outDir;
            return { ...atual, types: path_1.default.join(outDir, main) };
        });
    }
    return emitted;
}
exports.processPackage = processPackage;
//# sourceMappingURL=index.js.map