import type { Configuration, FileConfig } from './types';
/**
 * The list of possible filenames for the configuration file. Package.json is checked separately.
 */
export declare const possibleFilenames: string[];
/**
 *
 * Attempts to read or create a configuration file for the specified directory.
 *
 * @param directory the directory to find the file
 * @returns the read config or a newly created one
 */
export declare function readConfig(directory?: string): Promise<Partial<FileConfig>>;
/**
 * Parses the read config and merge any empty property with the defaults
 *
 * @param config the partial config that was read
 * @returns the complete config merged with defaults
 */
export declare function parseConfig(config: Partial<FileConfig>): Configuration;
//# sourceMappingURL=reader.d.ts.map